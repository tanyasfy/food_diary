{"version":3,"sources":["bin.ts"],"names":["app","generate","createMatcher","tsReadme","name","description","examples","example","desc","options","type","String","defaultOption","multiple","Number","args","matcher","undefined","pattern","headerDepth"],"mappings":"AAAA,OAASA,GAAT,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,QAAP,EAAkBC,aAAlB,KAAsC,GAAtC,CAEA,GAAMC,CAAAA,QAAiB,CAAG,CACxBC,IAAI,CAAE,WADkB,CAExBC,WAAW,CAAE,8DAFW,CAGxBC,QAAQ,CAAE,CACR,CACEC,OAAO,CAAE,WADX,CAEEC,IAAI,CAAE,0CAFR,CADQ,CAKR,CACED,OAAO,CAAE,wCADX,CAEEC,IAAI,CAAE,uBAFR,CALQ,CAHc,CAaxBC,OAAO,CAAE,CACP,CACEL,IAAI,CAAE,SADR,CAEEM,IAAI,CAAEC,MAFR,CAGEC,aAAa,CAAE,IAHjB,CAIEC,QAAQ,CAAE,IAJZ,CAKER,WAAW,CAAE,gCALf,CADO,CAQP,CACED,IAAI,CAAE,cADR,CAEEM,IAAI,CAAEI,MAFR,CAGET,WAAW,CAAE,yCAHf,CARO,CAaP,CACED,IAAI,CAAE,SADR,CAEEM,IAAI,CAAEC,MAFR,CAGEN,WAAW,CAAE,6EAHf,CAbO,CAbe,CAA1B,CAkCA,GAAMU,CAAAA,IAAI,CAAGf,GAAG,CAACG,QAAD,CAAhB,CAEA,GAAIY,IAAJ,CAAU,CACR,GAAMC,CAAAA,OAAO,CAAGD,IAAI,CAACC,OAAL,CAAed,aAAa,CAACa,IAAI,CAACC,OAAN,CAA5B,CAA6CC,SAA7D,CACAhB,QAAQ,CAAC,CAAEiB,OAAO,CAAEH,IAAI,CAACG,OAAhB,CAAyBC,WAAW,CAAEJ,IAAI,CAACI,WAA3C,CAAwDH,OAAO,CAAPA,OAAxD,CAAD,CACT","sourcesContent":["import { app, Command } from 'command-line-application';\nimport generate, {createMatcher} from '.';\n\nconst tsReadme: Command = {\n  name: 'ts-readme',\n  description: 'Generate docs from typescript + jsdoc and put it in a README',\n  examples: [\n    {\n      example: 'ts-readme',\n      desc: 'Generate docs for everything in \"src/\"'\n    },\n    {\n      example: 'ts-readme \"components/**/*.(ts|tsx)\"',\n      desc: 'Target specific files'\n    }\n  ],\n  options: [\n    {\n      name: 'pattern',\n      type: String,\n      defaultOption: true,\n      multiple: true,\n      description: 'The files to generate docs for'\n    },\n    {\n      name: 'header-depth',\n      type: Number,\n      description: 'How deep the markdown headers should be'\n    },\n    {\n      name: 'matcher',\n      type: String,\n      description: 'A string for creating and matching the markdown section to insert docs into'\n    }\n  ]\n};\n\nconst args = app(tsReadme);\n\nif (args) {\n  const matcher = args.matcher ? createMatcher(args.matcher) : undefined;\n  generate({ pattern: args.pattern, headerDepth: args.headerDepth, matcher });\n}\n"]}
